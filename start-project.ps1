# Script PowerShell para iniciar o projeto Essencial J√°
# Autor: Desenvolvedor S√™nior
# Data: 2025-10-01

# Fun√ß√£o para verificar se um comando existe
function Test-Command {
    param ($Command)
    $oldPreference = $ErrorActionPreference
    $ErrorActionPreference = 'stop'
    try {
        if (Get-Command $Command) { return $true }
    } catch {
        return $false
    } finally {
        $ErrorActionPreference = $oldPreference
    }
}

# Fun√ß√£o para exibir mensagens coloridas
function Write-ColorOutput {
    param ([string]$Message, [string]$Color = "White")
    Write-Host $Message -ForegroundColor $Color
}

# Limpar a tela
Clear-Host

# Banner do projeto
Write-ColorOutput "========================================" "Cyan"
Write-ColorOutput "    ESSENCIAIS J√Å - INICIALIZA√á√ÉO" "Cyan"
Write-ColorOutput "========================================" "Cyan"
Write-ColorOutput ""

# Verificar Node.js
Write-ColorOutput "[1/5] Verificando Node.js..." "Yellow"
if (-not (Test-Command node)) {
    Write-ColorOutput "‚ùå Node.js n√£o encontrado!" "Red"
    Write-ColorOutput "Por favor, instale o Node.js em: https://nodejs.org/" "Yellow"
    Write-ColorOutput "Vers√£o recomendada: 18.x ou superior" "Yellow"
    pause
    exit 1
}
$nodeVersion = node -v
Write-ColorOutput "‚úÖ Node.js encontrado: $nodeVersion" "Green"

# Verificar npm
Write-ColorOutput "`n[2/5] Verificando npm..." "Yellow"
if (-not (Test-Command npm)) {
    Write-ColorOutput "‚ùå npm n√£o encontrado!" "Red"
    pause
    exit 1
}
$npmVersion = npm -v
Write-ColorOutput "‚úÖ npm encontrado: v$npmVersion" "Green"

# Verificar diret√≥rio do projeto
Write-ColorOutput "`n[3/5] Verificando diret√≥rio do projeto..." "Yellow"
$projectFiles = @("package.json", "vite.config.ts", "src", "public")
$missingFiles = $projectFiles | Where-Object { -not (Test-Path $_) }
if ($missingFiles) {
    Write-ColorOutput "‚ùå Arquivos essenciais n√£o encontrados: $($missingFiles -join ', ')" "Red"
    Write-ColorOutput "Certifique-se de estar no diret√≥rio correto do projeto." "Yellow"
    pause
    exit 1
}
Write-ColorOutput "‚úÖ Estrutura do projeto verificada" "Green"

# Instalar depend√™ncias
Write-ColorOutput "`n[4/5] Verificando depend√™ncias..." "Yellow"
if (-not (Test-Path "node_modules")) {
    Write-ColorOutput "üì¶ Instalando depend√™ncias (isso pode levar alguns minutos)..." "Blue"
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-ColorOutput "‚ùå Erro ao instalar depend√™ncias!" "Red"
        pause
        exit 1
    }
    Write-ColorOutput "‚úÖ Depend√™ncias instaladas com sucesso!" "Green"
} else {
    Write-ColorOutput "‚úÖ Depend√™ncias j√° instaladas" "Green"
}

# Iniciar o servidor de desenvolvimento
Write-ColorOutput "`n[5/5] Iniciando servidor de desenvolvimento..." "Yellow"
Write-ColorOutput "`nüåê O projeto ser√° aberto em: http://localhost:8080" "Cyan"
Write-ColorOutput "üì± Para testar em outros dispositivos, use o IP da sua rede local" "Cyan"
Write-ColorOutput "‚ö†Ô∏è  Para parar o servidor, pressione Ctrl+C`n" "Yellow"

# Executar o servidor
npm run dev

